1.触发动态绑定的条件：a.只有指定为虚函数的成员函数才能进行动态绑定 b.必须通过基类类型的引用或指针才能进行函数调用；
2.引用和指针的静态类型和动态类型可以不同，C++用以支持多态形的基础
3.为了派生类函数调用基类中的版本，可以是用作用域操作符覆盖虚函数机制
4.派生类析构函数不负责撤销基类对象的成员，只负责清除自己的成员，首先运行派生类析构函数
5. Overload  重载
      在C++程序中，可以将语义、功能相似的几个函数用同一个名字表示，但参数不同（包括类型、顺序不同），即函数重载。
        （1）相同的范围（在同一个类中）；
        （2）函数名字相同；
        （3）参数不同；
     
     请注意，重载解析中不考虑返回类型，而且在不同的作用域里声明的函数也不算是重载。
   
   Override    覆盖
   
     是指派生类函数覆盖基类函数，特征是：
      （1）不同的范围（分别位于派生类与基类）；
        （2）函数名字相同；
        （3）参数相同；
        （4）基类函数必须有virtual 关键字。
     
   Overwrite：重写
      是指派生类的函数屏蔽了与其同名的基类函数，规则如下：
        （1）如果派生类的函数与基类的函数同名，但是参数不同。此时，不论有无virtual关键字，基类的函数将被隐藏。
        （2）如果派生类的函数与基类的函数同名，并且参数也相同，但是基类函数没有virtual关键字。此时，基类的函数被隐藏（注意别与覆盖混淆)
6.含有或继承一个或多个纯虚函数的类是抽象基类，不可创建对象。

